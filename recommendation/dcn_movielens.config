train_input_path: "recommendation/data/train-2.csv"
eval_input_path: "recommendation/data/test-2.csv"
model_dir: "recommendation/models/dcn-2"
train_config {
  optimizer_config: {
    adam_optimizer: {
      learning_rate: {
        exponential_decay_learning_rate {
          initial_learning_rate: 0.001
          decay_steps: 1000
          decay_factor: 0.5
          min_learning_rate: 0.00001
        }
      }
    }
    use_moving_average: false
  }
  log_step_count_steps: 100
  save_checkpoints_steps: 100
  sync_replicas: True
  num_steps: 2500
}

eval_config {
  metrics_set: {
    mean_absolute_error {}
  }
  metrics_set: {
    mean_squared_error {}
  }
}

data_config {
  input_fields {
    input_name:'userId'
    input_type: INT32
  }
  input_fields {
    input_name:'movieId'
    input_type: INT32
  }
  input_fields {
    input_name: 'rating'
    input_type: FLOAT
  }
  input_fields {
    input_name: 'timestamp'
    input_type: STRING
  }

  label_fields: 'rating'
  batch_size: 1024
  num_epochs: 10000
  prefetch_size: 32
  input_type: CSVInput
}

feature_config: {
  features: {
    input_names: 'userId'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 1000
  }
  features: {
    input_names: 'movieId'
    feature_type: IdFeature
    embedding_dim: 16
    hash_bucket_size: 50000
  }
}
model_config: {
  model_class: 'DCN'
  feature_groups: {
    group_name: 'all'
    feature_names: 'userId'
    feature_names: 'movieId'
    wide_deep: DEEP
  }
  dcn {
    deep_tower {
      input: "all"
      dnn {
        hidden_units: [256, 128, 96, 64]
      }
    }
    cross_tower {
      input: "all"
      cross_num: 5
    }
    final_dnn {
      hidden_units: [128, 96, 64, 32, 16]
    }
    l2_regularization: 1e-6
  }
  loss_type: L2_LOSS
  embedding_regularization: 1e-4
}
export_config {
}